---
name: Continuous Integration

"on":
  push:
    # only build each push to develop and master, other branches are built through pull requests
    branches: [develop, master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test,demos]

      - name: Run pytest tests
        run: |
          # benchmarks on shared infrastructure like the CI machines are usually unreliable (high
          # variance), so there's no point spending too much time, hence --benchmark-disable which
          # just runs them once (as a test)
          py.test -ra tests/ --doctest-modules \
              --cov=stellargraph --cov-report=xml \
              -p no:cacheprovider --junitxml="pytest-results-${{ matrix.python-version }}.xml" \
              --benchmark-disable

      - name: Upload pytest test results
        uses: actions/upload-artifact@v1
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: pytest-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          env_vars: OS,PYTHON

  copyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Checking that files have copyright headers
        run: |
          temp="$(mktemp)"
          copyrightRegex="# Copyright [0-9-]*2020 Data61, CSIRO"
          find . \( \
            -name "*.py" \
            -a ! -path "./demos/link-prediction/random-walks/utils/node2vec/node2vec.py" \
            -a ! -path "./demos/link-prediction/random-walks/utils/node2vec/main.py" \
            -a ! -path "./docs/conf.py" \
            \) \
            -exec grep -L "$copyrightRegex" {} + | tee "$temp"
          if [ -s "$temp" ]; then
            echo "^^^ +++"
            msg="Found files without a copyright header (no matches for \`$copyrightRegex\`)"
            echo "$msg"
            exit 1
          else
            echo "all files have a copyright header (have a match for \`$copyrightRegex\`)"
          fi
  whitespace:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check whitespace
        run: scripts/whitespace.sh --github-ci

  conda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1

      - name: Install conda build tools
        run: |
          conda install conda-build
          conda install conda-verify

      - name: Conda build StellarGraph
        run: conda build . --no-anaconda-upload

      - name: Get conda package details
        id: get_package
        run: |
          package_path=$(conda build . --output)
          package_name=$(basename $package_path)
          echo "::set-output name=package_path::${package_path}"
          echo "::set-output name=package_name::${package_name}"

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.get_package.outputs.package_name }}
          path: ${{ steps.get_package.outputs.package_path }}
