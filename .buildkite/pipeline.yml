steps:
  - label: ":python: 3.6"
    command: ".buildkite/steps/script.sh"
    plugins:
      docker#v3.2.0:
        image: "python:3.6-slim"
        environment:
          - PYTHONDONTWRITEBYTECODE=1
          - GIT_BRANCH=$BUILDKITE_BRANCH
          - COVERALLS_REPO_TOKEN
          - BUILDKITE_BUILD_NUMBER
          - BUILDKITE_BRANCH
          - AWS_LOGS_BUCKET
          # for coveralls-python, to send more metadata to coveralls.io
          - BUILDKITE
          - BUILDKITE_PULL_REQUEST
          - BUILDKITE_JOB_ID
    agents:
      queue: 't2medium'

  - label: ":python: 3.7"
    command: ".buildkite/steps/script.sh"
    plugins:
      docker#v3.2.0:
        image: "python:3.7-slim"
        environment:
          - PYTHONDONTWRITEBYTECODE=1
          - GIT_BRANCH=$BUILDKITE_BRANCH
          - COVERALLS_REPO_TOKEN
          - BUILDKITE_BUILD_NUMBER
          - BUILDKITE_BRANCH
          - AWS_LOGS_BUCKET
          # for coveralls-python, to send more metadata to coveralls.io
          - BUILDKITE
          - BUILDKITE_PULL_REQUEST
          - BUILDKITE_JOB_ID
    agents:
      queue: 't2medium'

  - label: ":python-black: format"
    plugins:
      docker#v3.2.0:
        image: "stellargraph/black"
        command: ["--check", "stellargraph", "tests"]
        environment:
          - PYTHONDONTWRITEBYTECODE=1

  - label: ":shell: format"
    plugins:
      docker#v3.2.0:
        image: "mvdan/shfmt:v2.6.4"
        command: ["-d", "-i", "2", "-ci", "-sr", "."]

  - label: ":shell: shellcheck"
    command: 'find ./ -type f -name "*.sh" -print0 | xargs -0 shellcheck --color=always'
    plugins:
      docker#v3.2.0:
        image: "koalaman/shellcheck-alpine:stable"

  - label: ":docker: :hadolint: lint Dockerfiles"
    command: "find -name 'Dockerfile*' -print0 | xargs -0 hadolint"
    plugins:
       docker#v3.2.0:
          image: "hadolint/hadolint:latest-debian"

  - label: ":copyright: check copyright headers"
    command: '.buildkite/steps/check-copyright-headers.sh'

  - label: ":docker: publish numbered images"
    command: ".buildkite/steps/manage-images.sh build-publish-numbered"
    agents:
      queue: "t2medium"
    branches: "develop feature/*"

  - wait: ~
    continue_on_failure: true

  - label: ":docker: (conditionally) publish docker images"
    command: ".buildkite/utils/checkstatus.sh .buildkite/steps/manage-images.sh publish-images"
    branches: "develop feature/*"

  - wait: ~
    continue_on_failure: true

  - label: ":console: push logs"
    command: .buildkite/utils/pushlogs.sh "#build-bots"
