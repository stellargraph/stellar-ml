---
compose-config: &compose-config
  config:
    - docker-compose.yml
    - .buildkite/docker-compose.yml

plugins: &plugins
  stellargraph/github-merged-pr#develop:
    mode: checkout

steps:
  - label: ":python: 3.6"
    key: "python_3_6"
    command: ".buildkite/steps/script.sh"
    plugins:
      <<: *plugins
      docker-compose#v3.1.0:
        <<: *compose-config
        run: runner-3.6
        env:
          - CHECK_NOTEBOOK_FORMATTING=1
    agents:
      queue: "t2medium"

  - label: ":python: 3.7"
    key: "python_3_7"
    command: ".buildkite/steps/script.sh"
    plugins:
      <<: *plugins
      docker-compose#v3.1.0:
        <<: *compose-config
        run: runner-3.7
    agents:
      queue: "t2medium"

  - label: ":python-black: format"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "stellargraph/black:snapshot"

  - label: ":shell: format"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "mvdan/shfmt:v2.6.4"
        command: ["-d", "-i", "2", "-ci", "-sr", "."]

  - label: ":shell: shellcheck"
    command: 'find ./ -type f -name "*.sh" -print0 | xargs -0 shellcheck --color=always'
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "koalaman/shellcheck-alpine:stable"

  - label: ":docker: :hadolint: lint Dockerfiles"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "stellargraph/hadolint:snapshot"

  - label: ":docker: format Dockerfiles"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "stellargraph/dockerfile-utils:snapshot"

  - label: ":prettier::yaml: format YAML"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "stellargraph/prettier:snapshot"
        command: [
            "--check",
            "**/*.yml",
            "**/*.yaml",
            # not valid YAML because of jinja templating
            "!meta.yaml",
          ]

  - label: ":yaml::lint-roller: lint YAML"
    plugins:
      <<: *plugins
      docker#v3.4.0:
        image: "stellargraph/yamllint:snapshot"

  - label: ":copyright: check copyright headers"
    command: ".buildkite/steps/check-copyright-headers.sh"

  - label: ":space_invader: check whitespace"
    command: "scripts/whitespace.sh --ci"

  - label: ":docker: build image"
    plugins:
      <<: *plugins
      docker-compose#v3.1.0:
        <<: *compose-config
        build:
          - stellargraph
        image-repository: index.docker.io/stellargraph/stellargraph
        # Caching can cause packages to be pinned to old (possibly-vulnerable) versions for long
        # periods.  Setting `REFRESH_BUILD=true` allows for builds (e.g. scheduled builds) to start
        # from scratch and refresh the caches.
        no-cache: ${REFRESH_BUILD-false}
        cache-from:
          - stellargraph:index.docker.io/stellargraph/stellargraph:${IMAGE_TAG}
          - stellargraph:index.docker.io/stellargraph/stellargraph:latest
    agents:
      queue: "t2medium"

  - wait

  - label: ":docker: publish image"
    plugins:
      <<: *plugins
      docker-compose#v3.1.0:
        <<: *compose-config
        push:
          - stellargraph:index.docker.io/stellargraph/stellargraph:${IMAGE_TAG}

  # Analyse the results of the testing, e.g. failures. This is not part of the testing, and has
  # explicit dependencies, so can be listed after all of the `wait` steps and publishings, so that
  # it runs in parallel with them.
  - label: ":memo: annotate with junit"
    plugins:
      junit-annotate#v1.7.0:
        artifacts: junit-*.xml
    depends_on:
      - "python_3_6"
      - "python_3_7"
    allow_dependency_failure: true
