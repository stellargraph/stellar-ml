steps:
  - label: ":python: 3.6"
    key: "python_3_6"
    command: ".buildkite/steps/script.sh"
    plugins:
      docker#v3.2.0:
        image: "python:3.6-slim"
        environment:
          - PYTHONDONTWRITEBYTECODE=1
          - GIT_BRANCH=$BUILDKITE_BRANCH
          - COVERALLS_REPO_TOKEN
          - BUILDKITE_BUILD_NUMBER
          - BUILDKITE_BRANCH
          - AWS_LOGS_BUCKET
          # for coveralls-python, to send more metadata to coveralls.io
          - BUILDKITE
          - BUILDKITE_PULL_REQUEST
          - BUILDKITE_JOB_ID
    agents:
      queue: 't2medium'

  - label: ":python: 3.7"
    key: "python_3_7"
    command: ".buildkite/steps/script.sh"
    plugins:
      docker#v3.2.0:
        image: "python:3.7-slim"
        environment:
          - PYTHONDONTWRITEBYTECODE=1
          - GIT_BRANCH=$BUILDKITE_BRANCH
          - COVERALLS_REPO_TOKEN
          - BUILDKITE_BUILD_NUMBER
          - BUILDKITE_BRANCH
          - AWS_LOGS_BUCKET
          # for coveralls-python, to send more metadata to coveralls.io
          - BUILDKITE
          - BUILDKITE_PULL_REQUEST
          - BUILDKITE_JOB_ID
    agents:
      queue: 't2medium'

  - label: ":python-black: format"
    plugins:
      docker#v3.2.0:
        image: "stellargraph/black"
        command: ["--check", "stellargraph", "tests"]
        environment:
          - PYTHONDONTWRITEBYTECODE=1

  - label: ":shell: format"
    plugins:
      docker#v3.2.0:
        image: "mvdan/shfmt:v2.6.4"
        command: ["-d", "-i", "2", "-ci", "-sr", "."]

  - label: ":shell: shellcheck"
    command: 'find ./ -type f -name "*.sh" -print0 | xargs -0 shellcheck --color=always'
    plugins:
      docker#v3.2.0:
        image: "koalaman/shellcheck-alpine:stable"

  - label: ":docker: :hadolint: lint Dockerfiles"
    plugins:
      docker#v3.4.0:
        image: "stellargraph/hadolint:snapshot"

  - label: ":copyright: check copyright headers"
    command: '.buildkite/steps/check-copyright-headers.sh'

  - label: ":docker: publish numbered images"
    command: ".buildkite/steps/manage-images.sh build-publish-numbered"
    agents:
      queue: "t2medium"
    branches: "develop feature/*"

  - wait

  - label: ":docker: publish docker images"
    command: ".buildkite/steps/manage-images.sh publish-images"
    branches: "develop feature/*"

  # Analyse the results of the testing, e.g. failures. This is not part of the testing, and has
  # explicit dependencies, so can be listed after all of the `wait` steps and publishings, so that
  # it runs in parallel with them.
  - label: ":memo: annotate with junit"
    plugins:
      junit-annotate#v1.7.0:
        artifacts: junit-*.xml
    depends_on:
      - "python_3_6"
      - "python_3_7"
    allow_dependency_failure: true
